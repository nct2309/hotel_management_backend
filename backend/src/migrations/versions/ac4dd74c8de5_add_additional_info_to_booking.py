"""add additional info to booking

Revision ID: ac4dd74c8de5
Revises: 579326645dbf
Create Date: 2024-11-02 19:52:29.293875

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ac4dd74c8de5'
down_revision: Union[str, None] = '579326645dbf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_token_blacklist_token', table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.drop_table('rate_limit')
    op.add_column('booking', sa.Column('guest_name', sa.String(), nullable=False))
    op.add_column('booking', sa.Column('guest_email', sa.String(), nullable=False))
    op.add_column('booking', sa.Column('number_of_guests', sa.Integer(), nullable=False))
    op.add_column('booking', sa.Column('guest_contact_numbers', sa.ARRAY(sa.String()), nullable=False))
    op.add_column('user', sa.Column('phone_number', sa.String(length=15), nullable=False))
    op.create_index(op.f('ix_user_phone_number'), 'user', ['phone_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_column('user', 'phone_number')
    op.drop_column('booking', 'guest_contact_numbers')
    op.drop_column('booking', 'number_of_guests')
    op.drop_column('booking', 'guest_email')
    op.drop_column('booking', 'guest_name')
    op.create_table('rate_limit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('limit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('period', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='rate_limit_pkey'),
    sa.UniqueConstraint('name', name='rate_limit_name_key')
    )
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_pkey')
    )
    op.create_index('ix_token_blacklist_token', 'token_blacklist', ['token'], unique=True)
    # ### end Alembic commands ###
