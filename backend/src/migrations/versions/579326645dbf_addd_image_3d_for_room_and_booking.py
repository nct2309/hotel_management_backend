"""addd image_3d for room and booking

Revision ID: 579326645dbf
Revises: 53d2126f2541
Create Date: 2024-11-02 14:44:57.704408

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '579326645dbf'
down_revision: Union[str, None] = '53d2126f2541'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rate_limit')
    op.drop_index('ix_token_blacklist_token', table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.create_unique_constraint(None, 'booking', ['id'])
    op.add_column('room', sa.Column('image_2d', sa.String(), nullable=False))
    op.add_column('room', sa.Column('image_3d', sa.String(), nullable=True))
    op.drop_column('room', 'image')
    op.create_unique_constraint("room_badge_id_key", 'room_badge', ['id'])
    op.create_unique_constraint("room_feature_id_key", 'room_feature', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("room_feature_id_key", 'room_feature', type_='unique')
    op.drop_constraint("room_badge_id_key", 'room_badge', type_='unique')
    op.add_column('room', sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('room', 'image_3d')
    op.drop_column('room', 'image_2d')
    op.drop_constraint(None, 'booking', type_='unique')
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_pkey')
    )
    op.create_index('ix_token_blacklist_token', 'token_blacklist', ['token'], unique=True)
    op.create_table('rate_limit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('limit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('period', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='rate_limit_pkey'),
    sa.UniqueConstraint('name', name='rate_limit_name_key')
    )
    # ### end Alembic commands ###
